diff --git a/services/bundlemgr/include/bundle_data_mgr.h b/services/bundlemgr/include/bundle_data_mgr.h
index f0f256582..bf2f8c949 100644
--- a/services/bundlemgr/include/bundle_data_mgr.h
+++ b/services/bundlemgr/include/bundle_data_mgr.h
@@ -799,6 +799,11 @@ public:
     bool GetBaseSharedPackageInfo(const Dependency &dependency, int32_t userId,
         BaseSharedPackageInfo &baseSharedPackageInfo) const;
 
+    ErrCode GetAllSharedBundleInfo(std::vector<SharedBundleInfo> &sharedBundles) const;
+
+    ErrCode GetSharedBundleInfo(const std::string &bundleName, const std::string &moduleName,
+        std::vector<SharedBundleInfo> &sharedBundles);
+
     bool DeleteSharedPackage(const std::string &bundleName);
 
     ErrCode GetSharedBundleInfoBySelf(const std::string &bundleName, SharedBundleInfo &sharedBundleInfo);
diff --git a/services/bundlemgr/src/bundle_data_mgr.cpp b/services/bundlemgr/src/bundle_data_mgr.cpp
index cd55df284..1eccd70a2 100644
--- a/services/bundlemgr/src/bundle_data_mgr.cpp
+++ b/services/bundlemgr/src/bundle_data_mgr.cpp
@@ -4511,6 +4511,52 @@ ErrCode BundleDataMgr::GetProvisionMetadata(const std::string &bundleName, int32
     return ERR_OK;
 }
 
+ErrCode BundleDataMgr::GetAllSharedBundleInfo(std::vector<SharedBundleInfo> &sharedBundles) const
+{
+    APP_LOGD("GetAllSharedBundleInfo");
+    std::lock_guard<std::mutex> lock(bundleInfoMutex_);
+
+    for (auto& infoItem : bundleInfos_) {
+        const InnerBundleInfo &innerBundleInfo = infoItem.second;
+        if (innerBundleInfo.GetCompatiblePolicy() == CompatiblePolicy::NORMAL) {
+            continue;
+        }
+        SharedBundleInfo sharedBundleInfo;
+        innerBundleInfo.GetSharedBundleInfo(sharedBundleInfo);
+        sharedBundles.emplace_back(sharedBundleInfo);
+    }
+
+    return ERR_OK;
+}
+
+ErrCode BundleDataMgr::GetSharedBundleInfo(const std::string &bundleName, const std::string &moduleName,
+    std::vector<SharedBundleInfo> &sharedBundles)
+{
+    if (bundleName.empty() || moduleName.empty()) {
+        APP_LOGE("bundleName or moduleName is empty");
+        return ERR_BUNDLE_MANAGER_PARAM_ERROR;
+    }
+
+    std::vector<Dependency> dependencies;
+    ErrCode errCode = GetSharedDependencies(bundleName, moduleName, dependencies);
+    if (errCode != ERR_OK) {
+        APP_LOGE("GetSharedDependencies failed errCode is %{public}d", errCode);
+        return errCode;
+    }
+
+    for (auto& dep : dependencies) {
+        SharedBundleInfo sharedBundleInfo;
+        errCode = GetSharedBundleInfoBySelf(dep.bundleName, sharedBundleInfo);
+        if (errCode != ERR_OK) {
+            APP_LOGE("GetSharedBundleInfoBySelf failed errCode is %{public}d", errCode);
+            return errCode;
+        }
+        sharedBundles.emplace_back(sharedBundleInfo);
+    }
+
+    return ERR_OK;
+}
+
 ErrCode BundleDataMgr::GetSharedBundleInfoBySelf(const std::string &bundleName, SharedBundleInfo &sharedBundleInfo)
 {
     APP_LOGD("GetSharedBundleInfoBySelf bundleName: %{public}s", bundleName.c_str());
@@ -4535,12 +4581,14 @@ ErrCode BundleDataMgr::GetSharedDependencies(const std::string &bundleName, cons
     std::lock_guard<std::mutex> lock(bundleInfoMutex_);
     auto item = bundleInfos_.find(bundleName);
     if (item == bundleInfos_.end()) {
-        APP_LOGE("GetSharedDependencies failed, can not find bundle %{public}s",
-            bundleName.c_str());
+        APP_LOGE("GetSharedDependencies failed, can not find bundle %{public}s", bundleName.c_str());
         return ERR_BUNDLE_MANAGER_BUNDLE_NOT_EXIST;
     }
     const InnerBundleInfo &innerBundleInfo = item->second;
-    innerBundleInfo.GetSharedDependencies(moduleName, dependencies);
+    if (!innerBundleInfo.GetSharedDependencies(moduleName, dependencies)) {
+        APP_LOGE("GetSharedDependencies failed, can not find module %{public}s", moduleName.c_str());
+        return ERR_BUNDLE_MANAGER_MODULE_NOT_EXIST;
+    }
     APP_LOGD("GetSharedDependencies(bundle %{public}s, module %{public}s) successfully)",
         bundleName.c_str(), moduleName.c_str());
     return ERR_OK;
diff --git a/services/bundlemgr/src/bundle_mgr_host_impl.cpp b/services/bundlemgr/src/bundle_mgr_host_impl.cpp
index c4dfe738e..1dbea1090 100644
--- a/services/bundlemgr/src/bundle_mgr_host_impl.cpp
+++ b/services/bundlemgr/src/bundle_mgr_host_impl.cpp
@@ -2416,7 +2416,12 @@ ErrCode BundleMgrHostImpl::GetAllSharedBundleInfo(std::vector<SharedBundleInfo>
         return ERR_BUNDLE_MANAGER_PERMISSION_DENIED;
     }
 
-    return ERR_OK;
+    auto dataMgr = GetDataMgrFromService();
+    if (dataMgr == nullptr) {
+        APP_LOGE("dataMgr is nullptr");
+        return ERR_BUNDLE_MANAGER_INTERNAL_ERROR;
+    }
+    return dataMgr->GetAllSharedBundleInfo(sharedBundles);
 }
 
 ErrCode BundleMgrHostImpl::GetSharedBundleInfo(const std::string &bundleName, const std::string &moduleName,
@@ -2433,7 +2438,12 @@ ErrCode BundleMgrHostImpl::GetSharedBundleInfo(const std::string &bundleName, co
         return ERR_BUNDLE_MANAGER_PERMISSION_DENIED;
     }
 
-    return ERR_OK;
+    auto dataMgr = GetDataMgrFromService();
+    if (dataMgr == nullptr) {
+        APP_LOGE("dataMgr is nullptr");
+        return ERR_BUNDLE_MANAGER_INTERNAL_ERROR;
+    }
+    return dataMgr->GetSharedBundleInfo(bundleName, moduleName, sharedBundles);
 }
 
 ErrCode BundleMgrHostImpl::GetSharedBundleInfoBySelf(const std::string &bundleName,
