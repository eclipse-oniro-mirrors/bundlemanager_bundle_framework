# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//build/config/features.gni")
import("//build/ohos.gni")
import("//build/test.gni")
import("../../../appexecfwk.gni")
import("../../../services/bundlemgr/appexecfwk_bundlemgr.gni")
module_output_path = "bundle_framework/fuzz"

##############################fuzztest##########################################
ohos_fuzztest("BundleInstalldHostFuzzTest") {
  module_out_path = module_output_path
  fuzz_config_file = "../../fuzztest/bundleinstalldhost_fuzzer"

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  use_exceptions = true

  sources = bundle_mgr_source
  sources -= [ "${services_path}/bundlemgr/src/system_ability_helper.cpp" ]
  sources += [
    "${services_path}/bundlemgr/src/aot/aot_executor.cpp",
    "${services_path}/bundlemgr/src/installd/installd_host_impl.cpp",
    "${services_path}/bundlemgr/src/installd/installd_operator.cpp",
    "${services_path}/bundlemgr/src/installd/installd_service.cpp",
  ]

  sources += [
    "${services_path}/bundlemgr/test/mock/src/installd_permission_mgr.cpp",
    "${services_path}/bundlemgr/test/mock/src/mock_bundle_status.cpp",
    "${services_path}/bundlemgr/test/mock/src/system_ability_helper.cpp",
  ]

  sources += bundle_install_sources

  configs = [ "${services_path}/bundlemgr/test:bundlemgr_test_config" ]

  deps = bundle_install_deps
  deps += [
    "${base_path}:appexecfwk_base",
    "${core_path}:appexecfwk_core",
  ]

  external_deps = [
    "ability_runtime:ability_manager",
    "access_token:libtokenid_sdk",
    "appverify:libhapverify",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hitrace_native:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
  configs += [ "../../../services/bundlemgr:rdb_config" ]
  external_deps += [ "relational_store:native_rdb" ]
  sources += [
    "${services_path}/bundlemgr/src/bundle_data_storage_rdb.cpp",
    "${services_path}/bundlemgr/src/preinstall_data_storage_rdb.cpp",
    "${services_path}/bundlemgr/src/rdb/bms_rdb_open_callback.cpp",
    "${services_path}/bundlemgr/src/rdb/rdb_data_manager.cpp",
  ]

  sources += [ "bundleinstalldhost_fuzzer.cpp" ]
}
