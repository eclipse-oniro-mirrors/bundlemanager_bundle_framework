# Copyright (c) 2022-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

domain: BUNDLEMANAGER_UE

################################################################################
#                                   FAULT EVENT                                #
################################################################################
BUNDLE_INSTALL_EXCEPTION:
  __BASE: {type: FAULT, level: MINOR, desc: used to fault happened when bundle install}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  VERSION: {type: UINT32, desc: versionCode}
  INSTALL_TYPE: {type: STRING, desc: normal prebundle or freeInstall}
  SCENE: {type: STRING, desc: boot reboot or createUser}
  ERROR_CODE: {type: INT32, desc: error code}
  APP_INDEX: {type: INT32, desc: app index}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}
  IS_INTERCEPTED: {type: BOOL, desc: is intercepted}

BUNDLE_UNINSTALL_EXCEPTION:
  __BASE: {type: FAULT, level: MINOR, desc: used to fault happened when bundle uninstall}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  VERSION: {type: UINT32, desc: versionCode}
  INSTALL_TYPE: {type: STRING, desc: normal prebundle or freeInstall}
  ERROR_CODE: {type: INT32, desc: error code}
  APP_INDEX: {type: INT32, desc: app index}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}
  IS_INTERCEPTED: {type: BOOL, desc: is intercepted}

BUNDLE_UPDATE_EXCEPTION:
  __BASE: {type: FAULT, level: MINOR, desc: used to fault happened when bundle update}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  VERSION: {type: UINT32, desc: versionCode}
  INSTALL_TYPE: {type: STRING, desc: normal prebundle or freeInstall}
  ERROR_CODE: {type: INT32, desc: error code}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}
  IS_INTERCEPTED: {type: BOOL, desc: is intercepted}

PRE_BUNDLE_RECOVER_EXCEPTION:
  __BASE: {type: FAULT, level: MINOR, desc: used to fault happened when prebundle recover}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  VERSION: {type: UINT32, desc: versionCode}
  INSTALL_TYPE: {type: STRING, desc: only prebundle}
  ERROR_CODE: {type: INT32, desc: error code}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}
  IS_INTERCEPTED: {type: BOOL, desc: is intercepted}

BUNDLE_STATE_CHANGE_EXCEPTION:
  __BASE: {type: FAULT, level: MINOR, desc: used to fault happened when state change}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  ABILITY_NAME: {type: STRING, desc: abilityName}
  TYPE: {type: STRING, desc: application or ability}

BUNDLE_CLEAN_CACHE_EXCEPTION:
  __BASE: {type: FAULT, level: MINOR, desc: used to fault happened when clean cache or clean data}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  CLEAN_TYPE: {type: STRING, desc: clean cache or clean data}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}

################################################################################
#                                 BEHAVIOR EVENT                               #
################################################################################
BOOT_SCAN_START:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: boot scan start}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  TIME: {type: INT64, desc: time stamp}

BOOT_SCAN_END:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: boot scan end}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  TIME: {type: INT64, desc: time stamp}

BUNDLE_INSTALL:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: bundle install}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  VERSION: {type: UINT32, desc: versionCode}
  INSTALL_TYPE: {type: STRING, desc: normal prebundle or freeInstall}
  SCENE: {type: STRING, desc: boot reboot or createUser}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_APP_ID: {type: STRING, desc: calling appId}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}
  FINGERPRINT: {type: STRING, desc: fingerprint of the bundle}
  HIDE_DESKTOP_ICON: {type: BOOL, desc: whether hide desktop icon}
  APP_DISTRIBUTION_TYPE: {type: STRING, desc: app distribution type}
  FILE_PATH: {type: STRING, arrsize: 99, desc: the path of the hap file}
  HASH_VALUE: {type: STRING, arrsize: 99, desc: the hash value of the hap file}
  INSTALL_TIME: {type: INT64, desc: the install time or the bundle}
  APP_INDEX: {type: INT32, desc: app index}
  MIN_API_VERSION: {type: INT32, desc: minApiVersion}
  TARGET_API_VERSION: {type: INT32, desc: targetApiVersion}
  COMPILE_SDK_VERSION: {type: STRING, arrsize: 99, desc: compileSdkVersion}
  UID: {type: INT32, desc: uid}
  IS_ABC_COMPRESSED: {type: BOOL, desc: isAbcCompressed}

BUNDLE_UNINSTALL:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: bundle uninstall}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  VERSION: {type: UINT32, desc: versionCode}
  INSTALL_TYPE: {type: STRING, desc: normal prebundle or freeInstall}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_APP_ID: {type: STRING, desc: calling appId}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}
  APP_INDEX: {type: INT32, desc: app index}

BUNDLE_UPDATE:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: bundle update}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  VERSION: {type: UINT32, desc: versionCode}
  INSTALL_TYPE: {type: STRING, desc: normal prebundle or freeInstall}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_APP_ID: {type: STRING, desc: calling appId}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}
  FINGERPRINT: {type: STRING, desc: fingerprint of the bundle}
  HIDE_DESKTOP_ICON: {type: BOOL, desc: whether hide desktop icon}
  APP_DISTRIBUTION_TYPE: {type: STRING, desc: app distribution type}
  FILE_PATH: {type: STRING, arrsize: 99, desc: the path of the hap file}
  HASH_VALUE: {type: STRING, arrsize: 99, desc: the hash value of the hap file}
  INSTALL_TIME: {type: INT64, desc: the install time or the bundle}
  MIN_API_VERSION: {type: INT32, desc: minApiVersion}
  TARGET_API_VERSION: {type: INT32, desc: targetApiVersion}
  COMPILE_SDK_VERSION: {type: STRING, arrsize: 99, desc: compileSdkVersion}
  UID: {type: INT32, desc: uid}
  IS_ABC_COMPRESSED: {type: BOOL, desc: isAbcCompressed}

PRE_BUNDLE_RECOVER:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: prebundle recover}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  VERSION: {type: UINT32, desc: versionCode}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_APP_ID: {type: STRING, desc: calling appId}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}
  FINGERPRINT: {type: STRING, desc: fingerprint of the bundle}
  HIDE_DESKTOP_ICON: {type: BOOL, desc: whether hide desktop icon}
  APP_DISTRIBUTION_TYPE: {type: STRING, desc: app distribution type}
  FILE_PATH: {type: STRING, arrsize: 99, desc: the path of the hap file}
  HASH_VALUE: {type: STRING, arrsize: 99, desc: the hash value of the hap file}
  INSTALL_TIME: {type: INT64, desc: the install time or the bundle}
  INSTALL_TYPE: {type: STRING, desc: only prebundle}

BUNDLE_STATE_CHANGE:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: bundle or component disable or enable}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  ABILITY_NAME: {type: STRING, desc: abilityName}
  TYPE: {type: STRING, desc: application or ability}
  STATE: {type: STRING, desc: isEnable}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}
  APP_INDEX: {type: INT32, desc: app index}

BUNDLE_CLEAN_CACHE:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: bundle clean cache}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  USERID: {type: INT32, desc: userId of the bundle}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  CLEAN_TYPE: {type: STRING, desc: clean cache or clean data}
  CALLING_UID: {type: INT32, desc: calling uid}
  CALLING_BUNDLE_NAME: {type: STRING, desc: calling bundleName}

GET_REMOTE_ABILITY_INFO:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: get remote abilityInfo}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  DEVICE_ID: {type: STRING, desc: deviceId}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  LOCALE_INFO: {type: STRING, desc: localeInfo}
  ABILITY_NAME: {type: STRING, desc: abilityName}
  RESULT_CODE: {type: INT32, desc: result code}

GET_REMOTE_ABILITY_INFOS:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: get remote abilityInfos}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  DEVICE_ID: {type: STRING, desc: deviceId}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  LOCALE_INFO: {type: STRING, desc: localeInfo}
  ABILITY_NAME: {type: STRING, desc: abilityName}
  RESULT_CODE: {type: INT32, desc: result code}

BMS_USER_EVENT:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: user event}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  TYPE: {type: STRING, desc: user event type}
  USERID: {type: INT32, desc: userId of the bundle}
  TIME: {type: INT64, desc: time stamp}

BUNDLE_QUICK_FIX:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: bundle apply quick fix}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  APP_DISTRIBUTION_TYPE: {type: STRING, desc: app distribution type}
  APPLY_QUICK_FIX_FREQUENCY: {type: INT32, desc: apply quick fix frequency}
  FILE_PATH: {type: STRING, arrsize: 99, desc: the path of the hqf file}
  HASH_VALUE: {type: STRING, arrsize: 99, desc: the hash value of the hqf file}

CPU_SCENE_ENTRY:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: CPU Scenario Code, preserve: true}
  PACKAGE_NAME: {type: STRING, desc: package name}
  SCENE_ID: {type: STRING, desc: customized application scenario id}
  HAPPEN_TIME: {type: UINT16, desc: timestamp}

AOT_COMPILE_SUMMARY:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: AOT compile summary result in OTA scene}
  TOTAL_BUNDLE_NAMES: {type: STRING, arrsize: 99, desc: bundle names from MSDP}
  TOTAL_SIZE: {type: UINT32, desc: compile total bundle size}
  SUCCESS_SIZE: {type: UINT32, desc: compile success bundle size}
  COST_TIME_SECONDS: {type: INT64, desc: total compile cost time}
  TIME_STAMP: {type: INT64, desc: time stamp}

AOT_COMPILE_RECORD:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: AOT compile record result in OTA scene}
  BUNDLE_NAME: {type: STRING, desc: bundle name}
  COMPILE_RESULT: {type: BOOL, desc: compile result}
  FAILURE_REASON: {type: STRING, desc: compile bundle failure reason}
  COST_TIME_SECONDS: {type: INT64, desc: compile cost time}
  COMPILE_MODE: {type: STRING, desc: compile mode}
  TIME_STAMP: {type: INT64, desc: time stamp}

QUERY_OF_CONTINUE_TYPE:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: query abilityInfo by continuetype and bundleName}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  BUNDLE_NAME: {type: STRING, desc: bundleName}
  ABILITY_NAME: {type: STRING, desc: abilityName}
  CONTINUE_TYPE: {type: STRING, desc: continueType}
  ERROR_CODE: {type: INT32, desc: apply quick fix frequency}
  USERID: {type: INT32, desc: userId of the bundle}
  
FREE_INSTALL_EVENT:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: free install event}
  BUNDLE_NAME: {type: STRING, desc: bundle name}
  MODULE_NAME: {type: STRING, desc: module name}
  ABILITY_NAME: {type: STRING, desc: ability name}
  IS_FREE_INSTALL: {type: BOOL, desc: is free install}
  TIME_STAMP: {type: INT64, desc: time stamp}

BMS_DISK_SPACE:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: description the disk space in insufficient when an applicaiton is begin installed ir uninstall}
  FILE_NAME: {type: STRING, desc: file name}
  FREE_SIZE: {type: INT64, desc: free size}
  OPERATION_TYPE: {type: INT32, desc: operation type}

APP_CONTROL_RULE:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: app contitol rule}
  PNAMEID: {type: STRING, desc: package name}
  PVERSIONID: {type: STRING, desc: application version}
  APP_IDS: {type: STRING, arrsize: 100, desc: appIds}
  USERID: {type: INT32, desc: userId of the bundle}
  CALLING_NAME: {type: STRING, desc: calling name}
  OPERATION_TYPE: {type: INT32, desc: operation type}
  ACTION_TYPE: {type: INT32, desc: action type}
  RULE: {type: STRING, desc: rule}
  APP_INDEX: {type: INT32, desc: app index}

USER_DATA_SIZE:
   __BASE: {type: STATISTIC, level: MINOR , desc: data partition management}
   COMPONENT_NAME: {type: STRING, desc: name of component}
   PARTITION_NAME: {type: STRING, desc: name of partition}
   REMAIN_PARTITION_SIZE: {type: UINT64, desc: Remaining size of the partition}
   FILE_OR_FOLDER_PATH: {type: STRING, arrsize: 100, desc: File or folder path}
   FILE_OR_FOLDER_SIZE: {type: UINT64, arrsize: 100, desc: File or folder size}

DEFAULT_APP:
  __BASE: {type: BEHAVIOR, level: MINOR, desc: default application}
  ACTION_TYPE: {type: INT32, desc: action type}
  USERID: {type: INT32, desc: current userId}
  CALLING_NAME: {type: STRING, desc: calling name}
  WANT: {type: STRING, desc: want}
  UTD: {type: STRING, desc: utd}

